// Title: Sliding Window Maximum
            // Difficulty: Hard
            // Language: Python3
            // Link: https://leetcode.com/problems/sliding-window-maximum/

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> 
List[int]:
        if len(nums) == 1:
            return nums
        left, right = 0, 0
        res = []
        dq = deque([0])
        while right < len(nums):
            while dq and nums[right] >= nums[dq[-1]]:
                dq.pop()
            dq.append(right)
            if right - left + 1 == k:
                res.append(nums[dq[0]])
                if dq[0] == left:
                    dq.popleft()
                left += 1
            right += 1
        return res