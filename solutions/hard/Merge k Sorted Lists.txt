// Title: Merge k Sorted Lists
            // Difficulty: Hard
            // Language: Python3
            // Link: https://leetcode.com/problems/merge-k-sorted-lists/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        for node in lists:
class HeapNode:
    def __init__(self, node):
    def __lt__(self, other):
        self.node = node

        return self.node.val < other.node.val

        heap = []
                heapq.heappush(heap, HeapNode(node))
            if node:
        while heap:
        root = ListNode(0)
            heap_node = heapq.heappop(heap)
            node = heap_node.node
            if node.next:
                heapq.heappush(heap, HeapNode(node.next))
            curr.next = node
        curr = root
            curr = node
        return root.next