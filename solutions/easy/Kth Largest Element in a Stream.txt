// Title: Kth Largest Element in a Stream
            // Difficulty: Easy
            // Language: Python3
            // Link: https://leetcode.com/problems/kth-largest-element-in-a-stream/

class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        self.heap = []
                heapq.heappush(self.heap, val)
    def add(self, val: int) -> int:
        if len(self.heap) >= self.k:

                    heapq.heappush(self.heap, val)
        for val in nums:
            if len(self.heap) >= self.k:
                    heapq.heappop(self.heap)
            if val > self.heap[0]:
                heapq.heappop(self.heap)
                heapq.heappush(self.heap, val)
        self.k = k
            else:
                if val > self.heap[0]:

        else:
            heapq.heappush(self.heap, val)
        return self.heap[0]
# Your KthLargest object will be instantiated and called as such:
# obj = KthLargest(k, nums)
        heapq.heapify(self.heap)
# param_1 = obj.add(val)