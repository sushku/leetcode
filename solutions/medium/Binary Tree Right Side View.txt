// Title: Binary Tree Right Side View
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/binary-tree-right-side-view/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        q = deque()
        node = root
        while node:
        level, prevLevel = 0, 0
            if level != prevLevel:
            if node.left:
                q.append((level + 1, node.left))
            if node.right:
                q.append((level + 1, node.right))
                level, node = q.popleft()
                prevLevel = level
                vals.append(levelVals[-1]) 
        vals, levelVals = [], []
            levelVals.append(node.val)
                levelVals = []
            if q:
            else:
                break
            vals.append(levelVals[-1])
        if levelVals:
        return vals