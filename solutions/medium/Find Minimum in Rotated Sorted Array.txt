// Title: Find Minimum in Rotated Sorted Array
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/

class Solution:
    def findMin(self, nums: List[int]) -> int:
        if len(nums) == 1 or nums[0] < nums[-1]:
            return nums[0]
        left, right = 0, len(nums) - 1
        while left < right:
            mid = (left + right) // 2
            if nums[mid] < nums[0]:
                right = mid
            else:
                left = mid + 1
        return nums[right]

        # prevNum, first = nums[0], nums[0]
        # for i in range(1, len(nums)):
        #     if nums[i] < prevNum:
        #         return nums[i]
        #     prevNum = nums[i]
        # return first