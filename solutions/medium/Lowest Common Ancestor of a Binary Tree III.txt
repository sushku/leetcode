// Title: Lowest Common Ancestor of a Binary Tree III
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii/

"""
# Definition for a Node.
class Node:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None
        self.parent = None
"""

class Solution:
    def lowestCommonAncestor(self, p: 'Node', q: 'Node') -> 'Node':
        parents = [[], []]
                parents[i].append(node.parent)
                node = node.parent
            parents[i] = parents[i][::-1]
        for i, node in enumerate([p, q]):
            while node:
        for j in range(min(len(parents[0]), len(parents[1]))):
            if parents[0][j] == parents[1][j]:
            parents[i].append(node)
                res = parents[0][j]
            else:
                break
        res = None
        return res