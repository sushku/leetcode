// Title: K Closest Points to Origin
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/k-closest-points-to-origin/

class Solution:
    def kClosest(self, points: List[List[int]], k: int) -> 
List[List[int]]:
        heap = []
        for p in points:
            distsq = (p[0] * p[0]) + (p[1] * p[1])
            if len(heap) < k:
                    heapq.heappop(heap)
                
                heapq.heappush(heap, [-1 * distsq, p])
            else:
                if (-1 * heap[0][0]) >= distsq:
                    heapq.heappush(heap, [-1 * distsq, p])
        return [h[1] for h in heap]