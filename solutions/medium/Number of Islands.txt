// Title: Number of Islands
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/number-of-islands/

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid:
            return 0
        rows, cols = len(grid), len(grid[0])
        visited = set()
        islands = 0
        q = deque()
        for r in range(rows):
            for c in range(cols):
                if (r, c) in visited:
                    continue
                if grid[r][c] == "1":
                    islands += 1
                    q.append((r, c))
                while q:
                    r1, c1 = q.popleft()
                    for n in [(1, 0), (0, 1), (-1, 0), (0, 
-1)]:
                        r2, c2 = r1 + n[0], c1 + n[1]
                        if 0 <= r2 < rows and 0 <= c2 < 
cols:
                            if grid[r2][c2] == "1" and (r2, 
c2) not in visited:
                                q.append((r2, c2))
                                visited.add((r2, c2))
                    visited.add((r, c))
        return islands