// Title: Palindrome Partitioning
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/palindrome-partitioning/

class Solution:
    def partition(self, s: str) -> List[List[str]]:
        partitions = []
        currSet = []

        def isPalindrome(substring):
            return substring == substring[::-1]
        def helper(sub):
                if isPalindrome(sub[0:end]):
            for end in range(1, len(sub) + 1):
                    currSet.append(sub[0:end])
                    helper(sub[end:])

                    currSet.pop()

        helper(s)
            if not sub:
                partitions.append(currSet.copy())
                return
        return partitions