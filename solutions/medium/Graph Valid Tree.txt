// Title: Graph Valid Tree
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/graph-valid-tree/

        
        stk = [0]
        while stk:
            node = stk.pop()
            for neighbor in adj[node]:
                stk.append(neighbor)
                parent[neighbor] = node
        parent ={0: -1}
                if neighbor == parent[node]:
                    continue
                if neighbor in parent:
                    return False
        return len(parent) == n
class Solution:
    def validTree(self, n: int, edges: List[List[int]]) -> bool:
        adj = {i: [] for i in range(n)}
        for edge in edges:
            adj[edge[0]].append(edge[1])
            adj[edge[1]].append(edge[0])