// Title: Network Delay Time
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/network-delay-time/

class Solution:
    def networkDelayTime(self, times: List[List[int]], n: 
int, k: int) -> int:
        adj = {i: [] for i in range(1, n+1)}
        for i in times:
            adj[i[0]].append([i[1], i[2]])

        nodeMap = {}
        minHeap = [(0, k)]
        while minHeap:
            time, node = heapq.heappop(minHeap)
            if node in nodeMap:
            nodeMap[node] = time
            for neighbor in adj[node]:
                    heapq.heappush(minHeap, (time + neighbor
[1], neighbor[0]))

        vals = list(nodeMap.values())
        if len(vals) < n:
            return -1
                continue
                if neighbor[0] not in nodeMap:
        return max(vals)