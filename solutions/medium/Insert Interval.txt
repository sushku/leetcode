// Title: Insert Interval
            // Difficulty: Medium
            // Language: Python3
            // Link: https://leetcode.com/problems/insert-interval/

class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        if not intervals:
            return [newInterval]
        ns, ne = newInterval
        res = []
        if ne < intervals[0][0]:
            res.append([ns, ne])
            for interval in intervals:
                res.append(interval)
            return res
        if ns > intervals[-1][1]:
            intervals.append([ns, ne])
            return intervals
        i = 0
        mergeStart, mergeEnd = None, None
        while i < len(intervals):
            s, e = intervals[i][0], intervals[i][1]
            if e < ns:
                res.append([s, e])
                i += 1
                continue
            if mergeStart is not None and s > ne:
                res.append([s, e])
                i += 1
                continue
            mergeStart = min(ns, s)
            if ne < s:
                mergeEnd = ne
                res.append([mergeStart, mergeEnd])
                res.append([s, e])
                i += 1
                continue
            else:
                while i < len(intervals):
                    s, e = intervals[i][0], intervals[i][1]
                    if s <= ne:
                        mergeEnd = max(ne, e)
                        i += 1
                    else:
                        break
                res.append([mergeStart, mergeEnd])
        return res